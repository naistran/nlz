#!/usr/bin/env node

var program = require('commander')

program
  .version(require('../package.json').version)
  .usage('<command> [options]')
  .parse(process.argv)

program.on('--help', function() {
  console.log('  Commands:')
  console.log()
  console.log('    build               build the entry points')
  console.log()
  process.exit()
})

var args = process.argv.slice(2)
if (!args.length) {
  console.error('error: no command specified. type `nlz --help` for options.')
  process.exit(1)
}

var spawn = require('child_process').spawn
var path = require('path')
var fs = require('fs')
var join = path.join
var stat = fs.statSync
var exists = fs.existsSync
var resolve = path.resolve

var bin = 'nlz-' + args.shift()

var local = join(__dirname, bin);

if (exists(local)) {
  bin = local
} else {
  bin = process.env.PATH.split(':').reduce(function(binary, p) {
    p = resolve(p, bin)
    return exists(p) && stat(p).isFile() ? p : binary
  }, bin)
}

if (!exists(bin)) {
  console.error('%s(1) does not exist', bin)
  process.exit(1)
}

var proc = spawn('node', [
  '--harmony-generators',
  bin,
].concat(args), { stdio: 'inherit', customFds: [0, 1, 2] })

proc.on('close', function(code){
  process.exit(code)
})
